name: CI-CD-to AWS-EB
env:
  EB_PACKAGE_S3_BUCKET_NAME : "yasamal-first-application-beans"
  EB_APPLICATION_NAME       : "MyFlask"
  EB_ENVIRONMENT_NAME       : "MyFlask-env"
  DEPLOY_PACKAGE_NAME       : "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "eu-central-1"
  
on:
  push:
    branches:
      - master

jobs:
  
  CI_PART:
    runs-on:  ubuntu-latest
    
    steps:
    - name: Git clone our repository
      uses: actions/checkout@v1
      
    - name: Create ZIP file with *git files/folders exclusion  
      run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
      
    - name: Configure my AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_ACCESS_KEY }}
        aws-region            : ${{ env.AWS_REGION_NAME }}
        
    - name: Copy deployment package to S3
      run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}
    
    - name: Print CI part finish message
      run: echo "CI part is completed"
      
      
  CD_PART:
    runs-on:  ubuntu-latest
    needs: [CI_PART]
    
    steps:
    
    - name: Configure my AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_ACCESS_KEY }}
        aws-region            : ${{ env.AWS_REGION_NAME }}
        
    - name: Create a new EB application
      run : |
        aws elasticbeanstalk create-application-version \
        --application-name "${{ env.EB_APPLICATION_NAME }}" \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CommitSHA-${{ github.sha }}"
        
    - name: Deploy new EB Application version
      run : aws elasticbeanstalk update-environment --environment-name "${{ env.EB_ENVIRONMENT_NAME }}" --version-label "Ver-${{ github.sha }}"
      
    - name: Print CD part finish message
      run: echo "CD part is completed"
    
